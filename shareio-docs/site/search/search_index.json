{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o Apresenta\u00e7\u00e3o do Projeto share.io \u00e9 um aplicativo de perguntas e respostas focado em programa\u00e7\u00e3o. Ele vem para facilitar o dia a dia de desenvolvedores, funcionando como um chatbot desktop minimalista , que responde a d\u00favidas t\u00e9cnicas diretamente, sem a necessidade de abrir o navegador. O objetivo principal \u00e9 oferecer praticidade: o usu\u00e1rio digita sua d\u00favida de programa\u00e7\u00e3o em uma interface simples e recebe a resposta em tempo real, com base em informa\u00e7\u00f5es coletadas da internet. Objetivo e Tecnologias O share.io tem como prop\u00f3sito ser uma ferramenta leve, direta e acess\u00edvel para desenvolvedores que desejam tirar d\u00favidas de forma r\u00e1pida e sem distra\u00e7\u00f5es. Para o desenvolvimento do projeto, ser\u00e3o utilizadas as seguintes tecnologias: Frontend : Flutter (interface gr\u00e1fica desktop minimalista, estilo dark). Backend : Node.js (com TypeScript preferencialmente). Integra\u00e7\u00e3o : API para busca e resposta de perguntas relacionadas \u00e0 programa\u00e7\u00e3o. Principais Recursos Interface minimalista com tema dark . Campo de input \u00fanico para envio de perguntas. Retorno direto de respostas relacionadas \u00e0 programa\u00e7\u00e3o. Sem necessidade inicial de login/autentica\u00e7\u00e3o. Foco exclusivo em perguntas t\u00e9cnicas (sem suporte a perguntas fora de programa\u00e7\u00e3o nesta primeira vers\u00e3o). Autores - Daniel Fernandes Silva Made with Material for MkDocs","title":"Documenta\u00e7\u00e3o"},{"location":"#documentacao","text":"","title":"Documenta\u00e7\u00e3o"},{"location":"#apresentacao-do-projeto","text":"share.io \u00e9 um aplicativo de perguntas e respostas focado em programa\u00e7\u00e3o. Ele vem para facilitar o dia a dia de desenvolvedores, funcionando como um chatbot desktop minimalista , que responde a d\u00favidas t\u00e9cnicas diretamente, sem a necessidade de abrir o navegador. O objetivo principal \u00e9 oferecer praticidade: o usu\u00e1rio digita sua d\u00favida de programa\u00e7\u00e3o em uma interface simples e recebe a resposta em tempo real, com base em informa\u00e7\u00f5es coletadas da internet.","title":"Apresenta\u00e7\u00e3o do Projeto"},{"location":"#objetivo-e-tecnologias","text":"O share.io tem como prop\u00f3sito ser uma ferramenta leve, direta e acess\u00edvel para desenvolvedores que desejam tirar d\u00favidas de forma r\u00e1pida e sem distra\u00e7\u00f5es. Para o desenvolvimento do projeto, ser\u00e3o utilizadas as seguintes tecnologias: Frontend : Flutter (interface gr\u00e1fica desktop minimalista, estilo dark). Backend : Node.js (com TypeScript preferencialmente). Integra\u00e7\u00e3o : API para busca e resposta de perguntas relacionadas \u00e0 programa\u00e7\u00e3o.","title":"Objetivo e Tecnologias"},{"location":"#principais-recursos","text":"Interface minimalista com tema dark . Campo de input \u00fanico para envio de perguntas. Retorno direto de respostas relacionadas \u00e0 programa\u00e7\u00e3o. Sem necessidade inicial de login/autentica\u00e7\u00e3o. Foco exclusivo em perguntas t\u00e9cnicas (sem suporte a perguntas fora de programa\u00e7\u00e3o nesta primeira vers\u00e3o).","title":"Principais Recursos"},{"location":"#autores","text":"- Daniel Fernandes Silva Made with Material for MkDocs","title":"Autores"},{"location":"documento_de_requisitos/","text":"Documento de Requisitos Projeto Aplicativo desktop de perguntas e respostas focado em programa\u00e7\u00e3o . Problema Atualmente, para tirar d\u00favidas r\u00e1pidas de programa\u00e7\u00e3o, o usu\u00e1rio precisa abrir o navegador, pesquisar manualmente e navegar entre v\u00e1rias abas, o que causa distra\u00e7\u00f5es e perda de tempo . Contexto O projeto share.io tem como objetivo oferecer um chatbot desktop minimalista em que o usu\u00e1rio possa digitar sua d\u00favida t\u00e9cnica e receber uma resposta direta, sem precisar abrir o navegador. Descri\u00e7\u00e3o dos Requisitos Requisitos Funcionais ID Descri\u00e7\u00e3o RF01 O sistema deve permitir que o usu\u00e1rio insira uma pergunta em um campo de texto. RF02 O sistema deve enviar a pergunta para o backend para processamento. RF03 O backend deve consultar APIs ou fontes externas para buscar a resposta. RF04 O sistema deve retornar e exibir a resposta na interface do chat. RF05 O sistema deve identificar e rejeitar perguntas que n\u00e3o sejam relacionadas a programa\u00e7\u00e3o, exibindo uma mensagem padr\u00e3o. RF06 O sistema deve permitir m\u00faltiplas perguntas na mesma sess\u00e3o. RF07 O sistema deve exibir as mensagens do usu\u00e1rio e as respostas do chatbot em formato de chat. Requisitos N\u00e3o Funcionais Desempenho ID Descri\u00e7\u00e3o RNF01 O tempo m\u00e1ximo de resposta para cada pergunta deve ser inferior a 5 segundos. Confiabilidade ID Descri\u00e7\u00e3o RNF02 O sistema deve garantir funcionamento offline limitado (exibir mensagem de erro em caso de falha de conex\u00e3o). Seguran\u00e7a ID Descri\u00e7\u00e3o RNF03 Nesta vers\u00e3o inicial, n\u00e3o haver\u00e1 autentica\u00e7\u00e3o ou armazenamento de dados pessoais. Usabilidade ID Descri\u00e7\u00e3o RNF04 A interface deve ser minimalista, intuitiva e com design dark por padr\u00e3o. RNF05 A aplica\u00e7\u00e3o deve ser acess\u00edvel a usu\u00e1rios com diferentes n\u00edveis de experi\u00eancia em tecnologia. Compatibilidade ID Descri\u00e7\u00e3o RNF06 O sistema deve ser compat\u00edvel com Linux . RNF07 O sistema deve ser desenvolvido em Flutter (frontend) e Node.js/TypeScript (backend) . Resultados Esperados Espera-se que o sistema entregue: - Chat funcional para perguntas de programa\u00e7\u00e3o. - Resposta r\u00e1pida e objetiva com base em fontes externas. - Interface minimalista com design dark. - Compatibilidade com desktop em m\u00faltiplas plataformas.","title":"Documento de Requisitos"},{"location":"documento_de_requisitos/#documento-de-requisitos","text":"","title":"Documento de Requisitos"},{"location":"documento_de_requisitos/#projeto","text":"Aplicativo desktop de perguntas e respostas focado em programa\u00e7\u00e3o .","title":"Projeto"},{"location":"documento_de_requisitos/#problema","text":"Atualmente, para tirar d\u00favidas r\u00e1pidas de programa\u00e7\u00e3o, o usu\u00e1rio precisa abrir o navegador, pesquisar manualmente e navegar entre v\u00e1rias abas, o que causa distra\u00e7\u00f5es e perda de tempo .","title":"Problema"},{"location":"documento_de_requisitos/#contexto","text":"O projeto share.io tem como objetivo oferecer um chatbot desktop minimalista em que o usu\u00e1rio possa digitar sua d\u00favida t\u00e9cnica e receber uma resposta direta, sem precisar abrir o navegador.","title":"Contexto"},{"location":"documento_de_requisitos/#descricao-dos-requisitos","text":"","title":"Descri\u00e7\u00e3o dos Requisitos"},{"location":"documento_de_requisitos/#requisitos-funcionais","text":"ID Descri\u00e7\u00e3o RF01 O sistema deve permitir que o usu\u00e1rio insira uma pergunta em um campo de texto. RF02 O sistema deve enviar a pergunta para o backend para processamento. RF03 O backend deve consultar APIs ou fontes externas para buscar a resposta. RF04 O sistema deve retornar e exibir a resposta na interface do chat. RF05 O sistema deve identificar e rejeitar perguntas que n\u00e3o sejam relacionadas a programa\u00e7\u00e3o, exibindo uma mensagem padr\u00e3o. RF06 O sistema deve permitir m\u00faltiplas perguntas na mesma sess\u00e3o. RF07 O sistema deve exibir as mensagens do usu\u00e1rio e as respostas do chatbot em formato de chat.","title":"Requisitos Funcionais"},{"location":"documento_de_requisitos/#requisitos-nao-funcionais","text":"","title":"Requisitos N\u00e3o Funcionais"},{"location":"documento_de_requisitos/#desempenho","text":"ID Descri\u00e7\u00e3o RNF01 O tempo m\u00e1ximo de resposta para cada pergunta deve ser inferior a 5 segundos.","title":"Desempenho"},{"location":"documento_de_requisitos/#confiabilidade","text":"ID Descri\u00e7\u00e3o RNF02 O sistema deve garantir funcionamento offline limitado (exibir mensagem de erro em caso de falha de conex\u00e3o).","title":"Confiabilidade"},{"location":"documento_de_requisitos/#seguranca","text":"ID Descri\u00e7\u00e3o RNF03 Nesta vers\u00e3o inicial, n\u00e3o haver\u00e1 autentica\u00e7\u00e3o ou armazenamento de dados pessoais.","title":"Seguran\u00e7a"},{"location":"documento_de_requisitos/#usabilidade","text":"ID Descri\u00e7\u00e3o RNF04 A interface deve ser minimalista, intuitiva e com design dark por padr\u00e3o. RNF05 A aplica\u00e7\u00e3o deve ser acess\u00edvel a usu\u00e1rios com diferentes n\u00edveis de experi\u00eancia em tecnologia.","title":"Usabilidade"},{"location":"documento_de_requisitos/#compatibilidade","text":"ID Descri\u00e7\u00e3o RNF06 O sistema deve ser compat\u00edvel com Linux . RNF07 O sistema deve ser desenvolvido em Flutter (frontend) e Node.js/TypeScript (backend) .","title":"Compatibilidade"},{"location":"documento_de_requisitos/#resultados-esperados","text":"Espera-se que o sistema entregue: - Chat funcional para perguntas de programa\u00e7\u00e3o. - Resposta r\u00e1pida e objetiva com base em fontes externas. - Interface minimalista com design dark. - Compatibilidade com desktop em m\u00faltiplas plataformas.","title":"Resultados Esperados"}]}